#+title: github-topics.el
[[https://github.com/agzam/github-topics/actions/workflows/run-tests.yml][https://github.com/agzam/github-topics/actions/workflows/run-tests.yml/badge.svg]]

** What

Search through GitHub for a matching string. Currently only supports searching for PRs.

[[./screenshot.png]]

** Why

I needed to explore large Jira Epic with a bunch of tickets in it (and I have the list of tickets in my notes already); I just needed a nice and quick way of finding "all PRs mentioning a specific ticket number".

** How

This is a relatively simple package that (currently) does one and only thing â€“ there's a single command - ~(github-topics-find-prs)~. You give it a search string, and it tries to find all Pull Requests on GitHub matching that string, and then displays it in a nice Org-mode formatted buffer.

When universal arg is provided (called with ~C-u~) - it opens the search page in the browser, without creating a buffer in Emacs.

You can additionally pass other gh CLI parameters, and they *must* be separated from the search query (which can be blank) by =" -- "=.

Examples:

#+begin_src
refactored schemas -- --sort created

bugfixing -- --state open

-- --author agzam

-- --involves agzam

bullshit -- --match comments

etc.

to learn more, do 'gh search prs --help' in the terminal, or simply run the command with:
'-- --help' - it will show the same thing in the *Messages* buffer.
#+end_src


*** Prerequisites

It uses [[https://cli.github.com/][GitHub CLI]] to retrieve data and it assumes that it is correctly authenticated, and the token permissions for Orgs listed in ~github-topics-default-orgs~ are correctly set.

*** Installation

It's not published to MELPA or other repositories at the moment, so you'd have to grab it from GitHub directly. Use your preferred method of package management. Here's how it could be set for Doom Emacs:

packages.el
#+begin_src emacs-lisp
(package! github-topics :recipe (:host github :repo "agzam/github-topics"))
#+end_src

config.el
#+begin_src emacs-lisp
(use-package! github-topics
  :defer t
  :config
  (setopt github-topics-default-orgs '(nasa apache my-other-work-org)))
#+end_src*** Customizing

*** Customization

- Typically, you'd be searching within specified GitHub orgs. You can set them as shown in the previous section by customizing ~github-topics-default-orgs~

- There's a hook ~github-topics-prs-buffer-hook~ you can set, it gets triggered when the buffer with the list of PRs gets open, you can use it, for example to disable the spellchecker:

  #+begin_src emacs-lisp
  (defun on-github-topics-prs-buffer-h (buf)
    (jinx-mode -1))

  (add-hook 'github-topics-prs-buffer-hook 'on-github-topics-prs-buffer-h)
  #+end_src

  or expand/collapse sections programmatically, or manipulate the buffer content in any way you like.

- If ~github-topics-convert-body-with-pandoc~ set to ~t~ (default) and Emacs can find [[https://pandoc.org/][pandoc]], it will convert the body of Pull-Request to Org-mode format. If you'd like to keep the body as Markdown, you can set it to ~nil~.
  You can also set the path to pandoc explicitly (if Emacs for some reason can't locate it automatically), e.g.:

#+begin_src emacs-lisp
  (setopt github-topics-convert-body-with-pandoc "/urs/bin/local/pandoc")
#+end_src
